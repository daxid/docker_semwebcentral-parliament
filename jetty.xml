<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure_9_0.dtd">

<!-- =============================================================== -->
<!-- Documentation of this file format can be found at:              -->
<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
<!--                                                                 -->
<!-- Configure a Jetty Server instance with an ID "Server"           -->
<!-- Other configuration files may also configure the "Server"       -->
<!-- ID, in which case they are adding configuration to the same     -->
<!-- instance.  If other configuration have a different ID, they     -->
<!-- will create and configure another instance of Jetty.            -->
<!-- Consult the javadoc of o.e.j.server.Server for all              -->
<!-- configuration that may be set here.                             -->
<!-- =============================================================== -->
<Configure id="Server" class="org.eclipse.jetty.server.Server">

	<Call name="addBean">
      	  <Arg>
            <New class="org.eclipse.jetty.security.HashLoginService">
              <Set name="name">Realm</Set>
              <Set name="config">/usr/local/ParliamentKB/conf/realm.properties</Set>
              <Set name="refreshInterval">0</Set>
            </New>
      	  </Arg>
    	</Call>

	<Set name="stopAtShutdown">true</Set>
	<Set name="stopTimeout">5000</Set>
	<Set name="dumpAfterStart"><Property name="jetty.dump.start" default="false"/></Set>
	<Set name="dumpBeforeStop"><Property name="jetty.dump.stop" default="false"/></Set>

	<!-- =========================================================== -->
	<!-- Configure JMX.                                              -->
	<!-- Initialize the Jetty MBean container and the static log     -->
	<!-- =========================================================== -->

	<!-- Use if /etc/hosts is misconfigured
	<Call class="java.lang.System" name="setProperty">
		<Arg>java.rmi.server.hostname</Arg>
		<Arg>127.0.0.1</Arg>
	</Call>
	-->
	<New id="MBeanContainer" class="org.eclipse.jetty.jmx.MBeanContainer">
		<Arg><Call class="java.lang.management.ManagementFactory" name="getPlatformMBeanServer"/></Arg>
	</New>
	<Call name="addEventListener">
		<Arg><Ref refid="MBeanContainer"/></Arg>
	</Call>
	<Call name="addBean">
		<Arg><Ref refid="MBeanContainer"/></Arg>
	</Call>
	<Call name="addBean">
		<Arg><Call class="org.eclipse.jetty.util.log.Log" name="getLog"/></Arg>
	</Call>



	<!-- =========================================================== -->
	<!-- Configure the Server Thread Pool.                           -->
	<!-- The server holds a common thread pool which is used by      -->
	<!-- default as the executor used by all connectors and servlet  -->
	<!-- dispatches.                                                 -->
	<!--                                                             -->
	<!-- Configuring a fixed thread pool is vital to controlling the -->
	<!-- maximal memory footprint of the server and is a key tuning  -->
	<!-- parameter for tuning.  In an application that rarely blocks -->
	<!-- then maximal threads may be close to the number of 5*CPUs.  -->
	<!-- In an application that frequently blocks, then maximal      -->
	<!-- threads should be set as high as possible given the memory  -->
	<!-- available.                                                  -->
	<!--                                                             -->
	<!-- Consult the javadoc of o.e.j.util.thread.QueuedThreadPool   -->
	<!-- for all configuration that may be set here.                 -->
	<!-- =========================================================== -->
	<!-- uncomment to change type of threadpool
	<Arg name="threadpool"><New id="threadpool" class="org.eclipse.jetty.util.thread.QueuedThreadPool"/></Arg>
	-->
	<Get name="ThreadPool">
		<Set name="minThreads" type="int"><Property name="threads.min" default="10"/></Set>
		<Set name="maxThreads" type="int"><Property name="threads.max" default="200"/></Set>
		<Set name="idleTimeout" type="int"><Property name="threads.timeout" default="60000"/></Set>
		<Set name="detailedDump">false</Set>
	</Get>

	<!-- =========================================================== -->
	<!-- Add shared Scheduler instance                               -->
	<!-- =========================================================== -->
	<Call name="addBean">
		<Arg>
			<New class="org.eclipse.jetty.util.thread.ScheduledExecutorScheduler"/>
		</Arg>
	</Call>

	<!-- =============================================================== -->
	<!-- Add the Low Resources Monitor                                   -->
	<!-- =============================================================== -->
	<Call name="addBean">
		<Arg>
			<New class="org.eclipse.jetty.server.LowResourceMonitor">
				<Arg name="server"><Ref refid='Server'/></Arg>
				<Set name="period"><Property name="lowresources.period" default="1000"/></Set>
				<Set name="lowResourcesIdleTimeout"><Property name="lowresources.lowResourcesIdleTimeout" default="200"/></Set>
				<Set name="monitorThreads"><Property name="lowresources.monitorThreads" default="true"/></Set>
				<Set name="maxConnections"><Property name="lowresources.maxConnections" default="0"/></Set>
				<Set name="maxMemory"><Property name="lowresources.maxMemory" default="0"/></Set>
				<Set name="maxLowResourcesTime"><Property name="lowresources.maxLowResourcesTime" default="5000"/></Set>
			</New>
		</Arg>
	</Call>

	<!-- =========================================================== -->
	<!-- Http Configuration.                                         -->
	<!-- This is a common configuration instance used by all         -->
	<!-- connectors that can carry HTTP semantics (HTTP, HTTPS, etc.)-->
	<!-- It configures the non wire protocol aspects of the HTTP     -->
	<!-- semantic.                                                   -->
	<!--                                                             -->
	<!-- This configuration is only defined here and is used by      -->
	<!-- reference from other XML files such as jetty-http.xml,      -->
	<!-- jetty-https.xml and other configuration files which         -->
	<!-- instantiate the connectors.                                 -->
	<!--                                                             -->
	<!-- Consult the javadoc of o.e.j.server.HttpConfiguration       -->
	<!-- for all configuration that may be set here.                 -->
	<!-- =========================================================== -->
	<New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
		<Set name="secureScheme">https</Set>
		<Set name="securePort"><SystemProperty name="jetty.secure.port" default="8443"/></Set>
		<Set name="outputBufferSize"><Property name="jetty.output.buffer.size" default="32768"/></Set>
		<Set name="outputAggregationSize"><Property name="jetty.output.aggregation.size" default="8192"/></Set>
		<Set name="requestHeaderSize"><Property name="jetty.request.header.size" default="8192"/></Set>
		<Set name="responseHeaderSize"><Property name="jetty.response.header.size" default="8192"/></Set>
		<Set name="sendServerVersion"><Property name="jetty.send.server.version" default="true"/></Set>
		<Set name="sendDateHeader"><Property name="jetty.send.date.header" default="false"/></Set>
		<Set name="headerCacheSize">512</Set>
		<Set name="delayDispatchUntilContent"><Property name="jetty.delayDispatchUntilContent" default="false"/></Set>
		<!-- Uncomment to enable handling of X-Forwarded- style headers
		<Call name="addCustomizer">
			<Arg><New class="org.eclipse.jetty.server.ForwardedRequestCustomizer"/></Arg>
		</Call>
		-->
	</New>

	<!-- =========================================================== -->
	<!-- Add a HTTP Connector.                                       -->
	<!-- Configure an o.e.j.server.ServerConnector with a single     -->
	<!-- HttpConnectionFactory instance using the common httpConfig  -->
	<!-- instance defined in jetty.xml                               -->
	<!--                                                             -->
	<!-- Consult the javadoc of o.e.j.server.ServerConnector and     -->
	<!-- o.e.j.server.HttpConnectionFactory for all configuration    -->
	<!-- that may be set here.                                       -->
	<!-- =========================================================== -->
	<Call name="addConnector">
		<Arg>
			<New id="httpConnector" class="org.eclipse.jetty.server.ServerConnector">
				<Arg name="server"><Ref refid="Server"/></Arg>
				<Arg name="acceptors" type="int"><Property name="http.acceptors" default="-1"/></Arg>
				<Arg name="selectors" type="int"><Property name="http.selectors" default="-1"/></Arg>
				<Arg name="factories">
					<Array type="org.eclipse.jetty.server.ConnectionFactory">
						<!-- uncomment to support proxy protocol
						<Item>
							<New class="org.eclipse.jetty.server.ProxyConnectionFactory"/>
						</Item>-->
						<Item>
							<New class="org.eclipse.jetty.server.HttpConnectionFactory">
								<Arg name="config"><Ref refid="httpConfig"/></Arg>
							</New>
						</Item>
					</Array>
				</Arg>
				<Set name="host"><SystemProperty name="jetty.host" default="localhost"/></Set>
				<Set name="port"><SystemProperty name="jetty.port" default="8089"/></Set>
				<Set name="idleTimeout"><Property name="http.timeout" default="30000"/></Set>
				<Set name="soLingerTime"><Property name="http.soLingerTime" default="-1"/></Set>
				<Set name="acceptorPriorityDelta"><Property name="http.acceptorPriorityDelta" default="0"/></Set>
				<Set name="selectorPriorityDelta"><Property name="http.selectorPriorityDelta" default="0"/></Set>
				<Set name="acceptQueueSize"><Property name="http.acceptQueueSize" default="0"/></Set>
			</New>
		</Arg>
	</Call>

	<!-- =========================================================== -->
	<!-- Set the default handler structure for the Server            -->
	<!-- A handler collection is used to pass received requests to   -->
	<!-- both the ContextHandlerCollection, which selects the next   -->
	<!-- handler by context path and virtual host, and the           -->
	<!-- DefaultHandler, which handles any requests not handled by   -->
	<!-- the context handlers.                                       -->
	<!-- Other handlers may be added to the "Handlers" collection,   -->
	<!-- for example the jetty-requestlog.xml file adds the          -->
	<!-- RequestLogHandler after the default handler                 -->
	<!-- =========================================================== -->
	<Set name="handler">
		<New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
			<Set name="handlers">
				<Array type="org.eclipse.jetty.server.Handler">
					<Item>
						<New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
					</Item>
					<Item>
						<New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
					</Item>
					<Item>
						<New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler">
							<Set name="RequestLog">
								<New id="RequestLog" class="org.eclipse.jetty.server.AsyncNCSARequestLog">
									<Set name="filename"><Property name="jetty.base" default="."/><Property name="requestlog.filename" default="/log/yyyy_mm_dd.request.log"/></Set>
									<Set name="filenameDateFormat"><Property name="requestlog.filenameDateFormat" default="yyyy_MM_dd"/></Set>
									<Set name="retainDays"><Property name="requestlog.retain" default="90"/></Set>
									<Set name="append"><Property name="requestlog.append" default="false"/></Set>
									<Set name="extended"><Property name="requestlog.extended" default="false"/></Set>
									<Set name="logCookies"><Property name="requestlog.cookies" default="false"/></Set>
									<Set name="LogTimeZone"><Property name="requestlog.timezone" default="GMT"/></Set>
								</New>
							</Set>
						</New>
					</Item>
				</Array>
			</Set>
		</New>
	</Set>

	<!-- =============================================================== -->
	<!-- Mixin the Statistics Handler                                    -->
	<!-- =============================================================== -->
	<Get id="oldhandler" name="handler"/>
	<Set name="handler">
		<New id="StatsHandler" class="org.eclipse.jetty.server.handler.StatisticsHandler">
			<Set name="handler"><Ref refid="oldhandler"/></Set>
		</New>
	</Set>
	<Call class="org.eclipse.jetty.server.ConnectorStatistics" name="addToAllConnectors">
		<Arg><Ref refid="Server"/></Arg>
	</Call>

	<!-- =============================================================== -->
	<!-- Add annotation configuring classes to all webapps for this      -->
	<!-- server in order to correctly set up the JSP container           -->
	<!-- =============================================================== -->
	<Call class="org.eclipse.jetty.webapp.Configuration$ClassList" name="setServerDefault">
		<Arg><Ref refid="Server"/></Arg>
		<Call name="addBefore">
			<Arg name="beforeClass">org.eclipse.jetty.webapp.JettyWebXmlConfiguration</Arg>
			<Arg>
				<Array type="String">
					<Item>org.eclipse.jetty.annotations.AnnotationConfiguration</Item>
				</Array>
			</Arg>
		</Call>
	</Call>

	<!-- =============================================================== -->
	<!-- Create the deployment manager                                   -->
	<!-- The deplyment manager handles the lifecycle of deploying web    -->
	<!-- applications. Apps are provided by instances of the             -->
	<!-- AppProvider interface.                                          -->
	<!-- =============================================================== -->
	<Call name="addBean">
		<Arg>
			<New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
				<Set name="contexts">
					<Ref refid="Contexts"/>
				</Set>
				<Call name="setContextAttribute">
					<Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
					<Arg>.*/[^/]*servlet-api-[^/]*\.jar$|.*/javax.servlet.jsp.jstl-.*\.jar$|.*/org.apache.taglibs.taglibs-standard-impl-.*\.jar$</Arg>
					<!--".*/[^/]*servlet-api-[^/]*\.jar$|.*/javax.servlet.jsp.jstl-.*\.jar$|.*/[^/]*taglibs.*\.jar$" -->
				</Call>

				<!-- Add a customize step to the deployment lifecycle -->
				<!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class -->
				<!--
				<Call name="insertLifeCycleNode">
					<Arg>deployed</Arg>
					<Arg>starting</Arg>
					<Arg>customise</Arg>
				</Call>
				<Call name="addLifeCycleBinding">
					<Arg>
						<New class="org.eclipse.jetty.deploy.bindings.DebugBinding">
							<Arg>customise</Arg>
						</New>
					</Arg>
				</Call>
				-->

				<Call id="webappprovider" name="addAppProvider">
					<Arg>
						<New class="org.eclipse.jetty.deploy.providers.WebAppProvider">
							<Set name="monitoredDirName"><Property name="jetty.base" default="."/>/<Property name="jetty.deploy.monitoredDirName" default="webapps"/></Set>
							<Set name="defaultsDescriptor"><Property name="jetty.home" default="."/>/conf/webdefault.xml</Set>
							<Set name="scanInterval"><Property name="jetty.deploy.scanInterval" default="1"/></Set>
							<Set name="extractWars"><Property name="jetty.deploy.extractWars" default="true"/></Set>
							<Set name="configurationManager">
								<New class="org.eclipse.jetty.deploy.PropertiesConfigurationManager">
									<!-- file of context configuration properties
									<Set name="file"><SystemProperty name="jetty.base"/>/etc/some.properties</Set>
									-->
									<!-- set a context configuration property
									<Call name="put"><Arg>name</Arg><Arg>value</Arg></Call>
									-->
								</New>
							</Set>
						</New>
					</Arg>
				</Call>
			</New>
		</Arg>
	</Call>

</Configure>
